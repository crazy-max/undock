name: e2e

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - 'main'
      - 'v*'
    paths-ignore:
      - '**.md'
  pull_request:

env:
  DESTDIR: ./bin

jobs:
  registry:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          -
            image: "dockereng/packaging:buildx-v0.11.1"
            all: "true"
            loglevel: "debug"
          -
            image: "dockereng/packaging:buildx-v0.11.1"
            all: "true"
            wrap: "true"
            loglevel: "debug"
          -
            image: "crazymax/diun:4.20.1"
            all: "true"
            include: "/usr/local/bin"
            loglevel: "info"
          -
            image: "crazymax/diun:latest@sha256:3fca3dd86c2710586208b0f92d1ec4ce25382f4cad4ae76a2275db8e8bb24031"
            include: "/usr/local/bin"
            loglevel: "debug"
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build
        uses: docker/bake-action@v6
        with:
          targets: binary
      -
        name: Run
        run: |
          flags="--rm-dist"
          if [ -n "${{ matrix.loglevel }}" ]; then
            flags="${flags} --log-level ${{ matrix.loglevel }}"
          fi
          if [ "${{ matrix.all }}" = "true" ]; then
            flags="${flags} --all"
          fi
          if [ "${{ matrix.wrap }}" = "true" ]; then
            flags="${flags} --wrap"
          fi
          if [ -n "${{ matrix.include }}" ]; then
            flags="${flags} --include ${{ matrix.include }}"
          fi
          set -x
          ${{ env.DESTDIR }}/build/undock ${flags} ${{ matrix.image }} ./dist
      -
        name: Dist content
        run: |
          tree -nh ./dist

  cache:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build
        uses: docker/bake-action@v6
        with:
          targets: binary
      -
        name: Run
        run: |
          ${{ env.DESTDIR }}/build/undock --log-level debug --rm-dist --all crazymax/buildx-pkg:latest ./dist
      -
        name: Dist content
        run: |
          tree -nh ./dist
      -
        name: Re Run
        run: |
          rm -rf ./dist2
          ${{ env.DESTDIR }}/build/undock --log-level debug --rm-dist --all crazymax/buildx-pkg:latest ./dist2
      -
        name: Dist content
        run: |
          tree -nh ./dist2

  docker-daemon:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build
        uses: docker/bake-action@v6
        with:
          targets: binary
      -
        name: Create Dockerfile
        run: |
          mkdir ./bin/test
          cat > ./bin/test/Dockerfile <<EOL
          FROM alpine
          RUN mkdir hello && echo "Hello, world!" > /hello/world
          EOL
      -
        name: Build image and load
        uses: docker/build-push-action@v6
        with:
          context: ./bin/test
          load: true
          tags: image:local
      -
        name: Run
        run: |
          ${{ env.DESTDIR }}/build/undock --rm-dist --include /hello docker-daemon://image:local ./dist
      -
        name: Dist content
        run: |
          tree -nh ./dist

  docker-archive:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build
        uses: docker/bake-action@v6
        with:
          targets: binary
      -
        name: Create docker archive
        run: |
          docker pull dockereng/packaging:buildx-v0.11.1
          docker save dockereng/packaging:buildx-v0.11.1 > archive.tar
      -
        name: Run
        run: |
          ${{ env.DESTDIR }}/build/undock --rm-dist docker-archive://archive.tar ./dist
      -
        name: Dist content
        run: |
          tree -nh ./dist
